version: '3.8'

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb-staging
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: MiContraseñaSegura123
      MONGO_INITDB_DATABASE: present
      ENVIRONMENT: staging
    ports:
      - "27017:27017"
    volumes:
      - mongodb_staging_data:/data/db
      - ./mongodb_backup:/mongodb_backup
      - ./config/mongodb/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - app_network_staging
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "mongodb-staging"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
      args:
        - BUILD_ENV=staging
    image: present/backend:staging
    container_name: backend-staging
    restart: always
    expose:
      - "5000"
    env_file:
      - ./backend/.env.staging
    environment:
      - NODE_ENV=staging
      - ENVIRONMENT=staging
      - MONGODB_URI=mongodb://admin:MiContraseñaSegura123@mongodb-staging:27017/present?authSource=admin
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - app_network_staging
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:5000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "backend-staging"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
      args:
        - BUILD_ENV=staging
    image: present/frontend:staging
    container_name: frontend-staging
    restart: always
    ports:
      - "8080:80"
      - "8443:443"
    env_file:
      - ./frontend/.env.staging
    environment:
      - NODE_ENV=staging
      - ENVIRONMENT=staging
    volumes:
      - ./nginx/conf.d/staging.conf:/etc/nginx/conf.d/default.conf
      - ./ssl/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
    networks:
      - app_network_staging
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "frontend-staging"

  webhook:
    container_name: webhook-staging
    build:
      context: ./webhook
      dockerfile: Dockerfile
    image: present/webhook:staging
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./:/app/repo
    ports:
      - "9001:9000"
    networks:
      - app_network_staging
    environment:
      - WEBHOOK_SECRET=${WEBHOOK_SECRET}
      - REPO_PATH=/app/repo
      - BRANCH=staging
      - COMPOSE_FILE=docker-compose.staging.yml
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "webhook-staging"

volumes:
  mongodb_staging_data:
    name: present_mongodb_staging_data

networks:
  app_network_staging:
    name: present_app_network_staging
