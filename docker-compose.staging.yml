version: '3.8'

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb-staging
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DB:-present}
<<<<<<< HEAD
=======
      ENVIRONMENT: staging
>>>>>>> develop
    volumes:
      - mongodb_staging_data:/data/db
    networks:
      - app_network_staging
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
<<<<<<< HEAD
=======
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "mongodb-staging"
>>>>>>> develop

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
      args:
<<<<<<< HEAD
        - NODE_ENV=staging
    container_name: backend-staging
    restart: always
    ports:
      - "5001:5000"
    env_file:
      - .env.staging
    environment:
      - NODE_ENV=staging
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_CALLBACK_URL=http://localhost:5001/api/auth/google/callback
=======
        - BUILD_ENV=staging
    image: present/backend:staging
    container_name: backend-staging
    restart: always
    ports:
      - "${BACKEND_PORT:-5001}:5000"
    env_file:
      - ./backend/.env.staging
    environment:
      - NODE_ENV=production
      - ENVIRONMENT=staging
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_CALLBACK_URL=${GOOGLE_CALLBACK_URL}
>>>>>>> develop
      - JWT_SECRET=${JWT_SECRET}
      - REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET}
      - SESSION_SECRET=${SESSION_SECRET}
      - MONGODB_URI=mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongodb-staging:27017/${MONGO_DB:-present}?authSource=admin
<<<<<<< HEAD
      - FRONTEND_URL=http://localhost:8080
      - BACKEND_URL=http://localhost:5001
=======
      - FRONTEND_URL=${FRONTEND_URL:-https://present.attadia.com}
      - BACKEND_URL=${BACKEND_URL:-https://present.attadia.com/api}
      - IS_STAGING=true
>>>>>>> develop
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - app_network_staging
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
<<<<<<< HEAD
=======
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "backend-staging"
>>>>>>> develop

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
      args:
<<<<<<< HEAD
        - NODE_ENV=staging
    container_name: frontend-staging
    restart: always
    ports:
      - "8080:80"
      - "8443:443"
    env_file:
      - .env.staging
    environment:
      - NODE_ENV=staging
      - VITE_API_URL=http://localhost:5001
      - VITE_GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
    volumes:
      - ./ssl:/etc/nginx/ssl
      - ./nginx/conf.d:/etc/nginx/conf.d
=======
        - BUILD_ENV=staging
    image: present/frontend:staging
    container_name: frontend-staging
    restart: always
    ports:
      - "${HTTP_PORT:-8080}:80"
    env_file:
      - ./frontend/.env.staging
    environment:
      - NODE_ENV=production
      - ENVIRONMENT=staging
      - VITE_API_URL=http://localhost:5001/api
      - VITE_GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - IS_STAGING=true
    volumes:
      - ./nginx/conf.d/staging.conf:/etc/nginx/conf.d/default.conf
>>>>>>> develop
    depends_on:
      - backend
    networks:
      - app_network_staging
    healthcheck:
<<<<<<< HEAD
      test: ["CMD", "curl", "-f", "http://localhost"]
=======
      test: ["CMD", "curl", "-f", "http://localhost:80"]
>>>>>>> develop
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
<<<<<<< HEAD

networks:
  app_network_staging:
    driver: bridge

volumes:
  mongodb_staging_data: 
=======
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "frontend-staging"

networks:
  app_network_staging:
    name: present_app_network_staging

volumes:
  mongodb_staging_data:
    name: present_mongodb_staging_data 
>>>>>>> develop
