# Etapa de dependencias
FROM node:20-alpine AS deps

WORKDIR /app
COPY package.json ./

# Instalar todas las dependencias, incluyendo las de desarrollo
RUN npm install

# Etapa de build
FROM node:20-alpine AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY package.json ./
COPY vite.config.js ./
COPY index.html ./
COPY public ./public
COPY src ./src
COPY vercel.json ./

# Construir con npm
RUN NODE_ENV=production npm run build

# Etapa de producción - usar nginx:alpine-slim para imagen más pequeña
FROM nginx:alpine-slim AS runner
# Copiar solo los archivos necesarios
COPY --from=builder /app/. /usr/share/nginx/html

# Optimizar nginx
RUN rm -rf /etc/nginx/conf.d/* && \
    rm -rf /usr/share/nginx/html/index.html.br && \
    rm -rf /usr/share/nginx/html/index.html.gz

# Configurar nginx para mejor rendimiento
COPY nginx.conf /etc/nginx/nginx.conf

EXPOSE 80
CMD ["nginx", "-g", "daemon off;"] 