server {
    listen 80;
    server_name present.attadia.com api.present.attadia.com;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name present.attadia.com;

    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    root /usr/share/nginx/html;
    index index.html;

    location / {
        try_files $uri $uri/ /index.html;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }

    location /assets {
        expires 1y;
        add_header Cache-Control "public";
    }
}

server {
    listen 443 ssl;
    server_name api.present.attadia.com;

    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    location / {
        proxy_pass http://backend:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 300;
        proxy_connect_timeout 300;

        add_header "Access-Control-Allow-Origin" "https://present.attadia.com" always;
        add_header "Access-Control-Allow-Methods" "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header "Access-Control-Allow-Headers" "Authorization, Content-Type, Accept" always;
        add_header "Access-Control-Allow-Credentials" "true" always;

        if ($request_method = "OPTIONS") {
            add_header "Access-Control-Allow-Origin" "https://present.attadia.com" always;
            add_header "Access-Control-Allow-Methods" "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header "Access-Control-Allow-Headers" "Authorization, Content-Type, Accept" always;
            add_header "Access-Control-Allow-Credentials" "true" always;
            add_header "Content-Length" 0;
            add_header "Content-Type" "text/plain";
            return 204;
        }
    }

    location /web {
        proxy_pass http://172.17.0.1:7777;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}