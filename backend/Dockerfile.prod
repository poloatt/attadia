# Build stage
FROM node:18-alpine

WORKDIR /app

# Instalar dependencias necesarias
RUN apk add --no-cache wget curl git

# Configurar npm
RUN npm config set registry https://registry.npmjs.org/ && \
    npm config set strict-ssl false

# Copiar package.json y package-lock.json
COPY package*.json ./

# Limpiar cache e instalar dependencias
RUN npm cache clean --force && \
    rm -rf node_modules && \
    npm install

# Copiar el resto de la aplicación
COPY . .

# Copiar el archivo .env según el ambiente
ARG BUILD_ENV=production
COPY .env.${BUILD_ENV} .env

# Configurar el ambiente
ENV NODE_ENV=production \
    ENVIRONMENT=${BUILD_ENV}

# Healthcheck
HEALTHCHECK --interval=30s --timeout=30s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:5000/api/health || wget -q --spider http://localhost:5000/api/health || exit 1

# Exponer el puerto
EXPOSE 5000

CMD ["npm", "start"] 