# Etapa de dependencias
FROM node:20-alpine AS deps

WORKDIR /app
COPY package.json ./

# Instalar todas las dependencias, incluyendo las de desarrollo
RUN npm install

# Etapa de build
FROM node:20-alpine AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY package.json ./
COPY vite.config.js ./
COPY index.html ./
COPY public ./public
COPY src ./src

# Construir con npm
RUN NODE_ENV=production npm run build

# Etapa de producción - usar nginx:alpine-slim para imagen más pequeña
FROM nginx:alpine-slim AS runner
# Copiar solo los archivos necesarios
COPY --from=builder /app/dist /usr/share/nginx/html
COPY nginx.conf /etc/nginx/nginx.conf

# Optimizar nginx
RUN rm -rf /etc/nginx/conf.d/* && \
    rm -rf /usr/share/nginx/html/index.html.br && \
    rm -rf /usr/share/nginx/html/index.html.gz

# Configurar nginx para mejor rendimiento
RUN echo 'worker_processes auto;\n\
events { worker_connections 1024; }\n\
http {\n\
    access_log off;\n\
    sendfile on;\n\
    tcp_nopush on;\n\
    tcp_nodelay on;\n\
    keepalive_timeout 65;\n\
    types_hash_max_size 2048;\n\
    include /etc/nginx/mime.types;\n\
    default_type application/octet-stream;\n\
    gzip on;\n\
    gzip_vary on;\n\
    gzip_proxied any;\n\
    gzip_comp_level 6;\n\
    gzip_types text/plain text/css text/xml application/json application/javascript application/xml+rss application/atom+xml image/svg+xml;\n\
    server {\n\
        listen 80;\n\
        root /usr/share/nginx/html;\n\
        index index.html;\n\
        location / {\n\
            try_files $uri $uri/ /index.html;\n\
            expires -1;\n\
            add_header Cache-Control "no-store, no-cache, must-revalidate";\n\
        }\n\
        location /assets/ {\n\
            expires 1y;\n\
            add_header Cache-Control "public, no-transform";\n\
        }\n\
        location /health {\n\
            access_log off;\n\
            add_header Content-Type text/plain;\n\
            return 200 "OK";\n\
        }\n\
    }\n\
}' > /etc/nginx/nginx.conf

EXPOSE 80
CMD ["nginx", "-g", "daemon off;"] 